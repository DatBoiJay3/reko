// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	Mem6[ds:bx + 0x0000:word32] = Mem0[ds:bx + 0x0004:word32]
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: (struct (0 word32 dw0000) (4 word32 dw0004))
	T_2 (in bx : word16)
Eq_3: (segment)
	T_3 (in ds : selector)
Eq_8: (struct (4 word32 dw0004))
	T_8 (in bx + 0x0000 : word16)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in bx : word16)
  Class: Eq_2
  DataType: (memptr (ptr Eq_3) Eq_2)
  OrigDataType: (memptr T_3 (struct (0 T_9 t0000) (4 T_6 t0004)))
T_3: (in ds : selector)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (segment))
T_4: (in 0x0004 : word16)
  Class: Eq_4
  DataType: word16
  OrigDataType: word16
T_5: (in bx + 0x0004 : word16)
  Class: Eq_5
  DataType: word16
  OrigDataType: word16
T_6: (in Mem0[ds:bx + 0x0004:word32] : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in 0x0000 : word16)
  Class: Eq_7
  DataType: word16
  OrigDataType: word16
T_8: (in bx + 0x0000 : word16)
  Class: Eq_8
  DataType: (memptr (ptr Eq_3) Eq_8)
  OrigDataType: (memptr T_3 (struct (4 T_6 t0004)))
T_9: (in Mem6[ds:bx + 0x0000:word32] : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
