void fn0800_01FA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_01FA_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01FA:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01FA_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_01FF()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_01FF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01FF:
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	fn0800_01FA()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01FF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_0222()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_0222_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0222:
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	fn0800_01FF()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0222_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void fn0800_0245()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: bp sp
fn0800_0245_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0245:
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	fn0800_0222()
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0245_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp -2(fp):bp



void main(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
main_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -000E(16) Local -0010(16)

l0800_0265:
	word16 di_12
	word16 bx_13 = fn0800_0E4B(ds, 0x0194, out di_12)
	fn0800_16D4(bx_13, di_12, ds, 0x01B0)
	word16 di_37
	fn0800_0E4B(ds, 0x01B4, out di_37)
	word16 wLoc08_41 = 0x0000
	word16 wLoc0A_42 = 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_02A7:
	branch wLoc08_41 < wLoc04 l0800_029C
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_02B2:
	branch wLoc08_41 > wLoc04 l0800_02B9
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_02B4:
	branch wLoc0A_42 <=u wLoc06 l0800_029C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_029C:
	fn0800_0245()
	wLoc0A_42 = wLoc0A_42 + 0x0001
	wLoc08_41 = v16
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(8) Local -000E(16)

l0800_02B9:
	word16 di_70
	fn0800_0E4B(ds, 0x01CE, out di_70)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> cx:<invalid> dx:<invalid> al:<invalid> di:<invalid> si:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:0x01CE dx:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> -16(fp):0x01B4 -14(fp):<invalid> -12(fp):0x01CE -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_0E4B(selector ds, word16 wArg02, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bx di
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_0E4B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0E4B:
	word16 di_20
	word16 bx_21 = fn0800_1073(ds, wArg02, out di_20)
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0E62:
	return bx_21
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -10(fp):fp + 0x0004 -8(fp):<invalid> -6(fp):0x0352 -4(fp):0x0F81 -2(fp):bp

fn0800_0E4B_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> si:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -10(fp):fp + 0x0004 -8(fp):<invalid> -6(fp):0x0352 -4(fp):0x0F81 -2(fp):bp



word16 fn0800_1073(selector ds, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bx di
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0004(16)
fn0800_1073_entry:
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_1073:
	byte bLoc57_109 = 0x50
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0057(8) Stack +0004(16)

l0800_10CD:
	word16 sp_161 = fp - 0x00A0
	word16 di_107 = fp - 0x0056
	word16 si_105 = wArg04
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009E bp:fp - 0x0002 -158(fp):di -156(fp):si -90(fp):0x0000 -87(fp):0x50 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)

l0800_10DD:
	byte al_40 = Mem0[ds:si_105:byte]
	si_105 = si_105 + 0x0001
	byte al_101 = al_40
	ax = DPB(ax, al_40, 0) (alias)
	branch al_40 == 0x00 l0800_10F3
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)

l0800_10F3:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0)

l0800_10E2:
	branch al_40 == 0x25 l0800_10F6
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)

l0800_10F6:
	al_101 = Mem0[ds:si_105:byte]
	ax = DPB(ax, al_101, 0) (alias)
	si_105 = si_105 + 0x0001
	branch al_101 == 0x25 l0800_10E6
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8) Local -008C(16)

l0800_10FF:
	byte bLoc8F_128 = 0x00
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_1120:
	word16 ax_139 = DPB(ax, 0x00, 8)
	byte bl_143 = (byte) ax_139
	byte dl_141 = (byte) ax_139
	word16 bx_145 = DPB(ax_139, bl_143 - 0x20, 0)
	branch bl_143 >=u 0x80 l0800_1175
// DataOut: bp bx ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_112E:
	word16 bx_182 = DPB(ax_139, Mem0[ds:bx_145 + 0x04F9:byte], 0)
	branch bx_182 <=u 0x0017 l0800_113C
// DataOut: ax bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_113C:
	switch (bx_182 << 0x0001) { l0800_1190 }
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_1190:
	branch true l0800_1175
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_1175:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_1195:
	branch bLoc8F_128 == 0x2B l0800_11A0
// DataOut: bp ch dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_119C:
	bLoc8F_128 = dl_141
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_11A0:
// DataOut: bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_111F:
	ax = DPB(ax_139, Mem0[ds:si_105:byte], 0) (alias)
	si_105 = si_105 + 0x0001
// DataOut: al bp ch ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -008F(0) Local -0098(16)

l0800_1139:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0) Local -008C(16) Local -0098(16)

l0800_1560:
	word16 si_154 = si_105
	byte al_156 = 0x25
// DataOut: al bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0)

l0800_156A:
	bx = fn0800_1099(al_156, fp - 0x0002, di_107, ds, out di_107)
	byte al_167 = Mem0[ds:si_154:byte]
	sp_161 = sp_161 + 0xFFFE
	si_154 = si_154 + 0x0001
	al_156 = al_167
	branch al_167 != 0x00 l0800_156A
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(0)

l0800_1572:
	branch bLoc57_109 >= 0x50 l0800_157B
	branch bLoc57_109 >= 0x50 l0800_157B
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_1578:
	word16 di_93
	fn0800_10A1(fp - 0x0002, di_107, out di_93)
	word16 di_95
	bx = fn0800_10A1(fp - 0x0002, di_93, out di_95)
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_157B:
	word16 sp_80 = sp_161 + 0x0002
	branch 0x0000 == 0x0000 l0800_1589
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_1589:
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_1582:
// DataOut: bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_158E:
	word16 di_84
	*diOut = Mem0[ss:sp_80:word16]
	return bx
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_1073_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> -160(fp):es -158(fp):di -156(fp):si -154(fp):<invalid> -152(fp):<invalid> -148(fp):0xFFFF -146(fp):0xFFFF -143(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_10E6:
	Mem106[ds:di_107:byte] = al_101
	byte v15_108 = bLoc57_109 - 0x01
	di_107 = di_107 + 0x0001
	bLoc57_109 = v15_108
	branch v15_108 > 0x00 l0800_10DD
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)

l0800_10EE:
	bx = fn0800_10A1(fp - 0x0002, di_107, out di_107)
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> si:<invalid> al:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -160(fp):es -158(fp):di -156(fp):si -152(fp):fp - 0x0056 -140(fp):<invalid> -90(fp):0x0000 -87(fp):<invalid> -86(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0057(8)



word16 fn0800_1099(byte al, word16 bp, word16 di, selector ds, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ds ss
// LiveOut: bx di
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved: sp
fn0800_1099_entry:
// DataOut: al bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_1099:
	Mem3[ds:di:byte] = al
	byte v9_9 = Mem3[ss:bp - 0x0055:byte] - 0x01
	Mem10[ss:bp - 0x0055:byte] = v9_9
	word16 di_6
	*diOut = di + 0x0001
	branch v9_9 <= 0x00 l0800_10CC_in_fn0800_1099
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_10CC_in_fn0800_1099:
	return bx
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_109F_thunk_fn0800_10A1:
	word16 di_15
	return fn0800_10A1(bp, di + 0x0001, out di_15)
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_109F_thunk_fn0800_10A1:
	word16 di_17
	return fn0800_10A1(bp, di_15, out di_17)
// DataOut: bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>

fn0800_1099_exit:
// DataOut: bx di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_10A1(word16 bp, word16 di, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: bx di sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved:
fn0800_10A1_entry:
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_10A1:
	word16 sp_30
	word16 bx_31
	selector ss_32
	word16 cx_33
	word16 dx_34
	selector es_35
	word16 bp_36
	word16 ax_37
	word16 di_38
	byte SCZO_39
	selector cs_40
	byte SZO_41
	byte C_42
	byte Z_43
	call SEQ(cs, Mem0[ss:bp + 0x000A:word16]) (retsize: 2; depth: 16)
		uses: ax_19,bp,bx,cs,cx,di_17,dx,es,SCZO_18,sp_27,ss,wLoc02_4,wLoc04_7,wLoc06_10,wLoc08_13,wLoc0A_21,wLoc0C_23,wLoc0E_28
		defs: ax_37,bp_36,bx_31,C_42,cs_40,cx_33,di_38,dx_34,es_35,SCZO_39,sp_30,ss_32,SZO_41,Z_43
	branch ax_37 != 0x0000 l0800_10BE
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_10B9:
	Mem62[ss_32:bp_36 - 0x0002:word16] = 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E ax:bp - 0x0054 | bp - 0x0054 di:di - (bp - 0x0054) -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx
// LocalsOut: fp(16) Local -0008(16)

l0800_10BE:
	Mem48[ss_32:bp_36 - 0x0055:byte] = 0x50
	Mem50[ss_32:bp_36 - 0x0058:word16] = Mem48[ss_32:bp_36 - 0x0058:word16] + di_38
	word16 di_52
	*diOut = bp_36 - 0x0054
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E ax:bp - 0x0054 | bp - 0x0054 di:di - (bp - 0x0054) -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_10CC:
	return es
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:bp - 0x0054 | bp - 0x0054 di:bp - 0x0054 es:<invalid> dx:di - (bp - 0x0054) cx:bp - 0x0054 bx:es -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_10A1_exit:
// DataOut: bx di sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:bp - 0x0054 | bp - 0x0054 di:bp - 0x0054 es:<invalid> dx:di - (bp - 0x0054) cx:bp - 0x0054 bx:es -14(fp):<invalid> -12(fp):di - (bp - 0x0054) -10(fp):bp - 0x0054 -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



void fn0800_16D4(word16 bx, word16 di, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_16D4_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_16D4:
	fn0800_16F3(bx, di, ds, 0x0342, wArg02)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_16F1:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> al:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -12(fp):0x07F2 -10(fp):0x1D65 -8(fp):0x0342 -6(fp):<invalid> -4(fp):fp + 0x0004 -2(fp):bp

fn0800_16D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> al:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -12(fp):0x07F2 -10(fp):0x1D65 -8(fp):0x0342 -6(fp):<invalid> -4(fp):fp + 0x0004 -2(fp):bp



void fn0800_16F3(word16 bx, word16 di, selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx eax ebx ecx rax rbx rcx
// Preserved: bp di es si sp
// Stack args: Stack +0008(16)
fn0800_16F3_entry:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0008(16)

l0800_16F3:
	word16 bp_156 = fp - 0x0002
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0028(8) Stack +0008(16)

l0800_1721:
	word16 si_159 = wArg08
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 0x0002 -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1726:
	byte al_57 = Mem0[ds:si_159:byte]
	word16 si_58 = si_159 + 0x0001
	branch al_57 == 0x00 l0800_1788
// DataOut: al bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1788:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_172B:
	branch al_57 == 0x25 l0800_178B
// DataOut: al bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_178B:
	word16 ax_353 = (int16) Mem0[ds:si_58:byte]
	branch ax_353 < 0x0000 l0800_17E6
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_179E:
	branch DPB(bx, 0x00, 8) <=u 0x0015 l0800_17AE
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_17AE:
	switch (ax_353) { l0800_17E6 }
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:0x00 cx:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_17E6:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_17AB:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:0x00 cx:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_172F:
	word16 sp_155
	byte SCZO_158
	word16 di_160
	selector es_161
	byte D_162
	byte al_163
	byte SZO_165
	byte C_166
	byte Z_167
	word16 ax_168
	word16 cx_170
	byte SO_171
	byte S_172
	byte bl_174
	byte bh_175
	byte CZ_176
	call SEQ(cs, Mem0[ss:bp_156 + 0x0004:word16]) (retsize: 2; depth: 54)
		uses: al_59,ax_145,bh_39,bl_40,bLoc2B,bp_54,bx_41,C_63,cs_44,cx_48,CZ_38,D_46,di_146,ds_45,es_50,S_42,SCZO_99,si_58,SO_43,sp_151,ss_47,SZO_149,wLoc02_4,wLoc24,wLoc28_148,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_152,wLoc36_37,Z_100
		defs: al_163,ax_168,bh_175,bl_174,bp_156,bx_173,C_166,cs_169,cx_170,CZ_176,D_162,di_160,ds_164,es_161,S_172,SCZO_158,si_159,SO_171,sp_155,ss_157,SZO_165,Z_167
	word16 ax_179 = ax_168
	branch ax_168 < 0x0000 l0800_1764
// DataOut: al ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_173F:
	branch di_160 < 0x0000 l0800_1775
// DataOut: al ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1743:
	branch Mem0[ds:di_160 + 0x055A:byte] != 0x01 l0800_1775
// DataOut: al ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1775:
	branch ax_168 == di_160 l0800_1726
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1779:
	word16 sp_219
	word16 bp_220
	selector ss_221
	byte SCZO_222
	word16 si_223
	word16 di_224
	selector es_225
	byte D_226
	byte al_227
	selector ds_228
	byte SZO_229
	byte C_230
	byte Z_231
	word16 ax_232
	selector cs_233
	word16 cx_234
	byte SO_235
	byte S_236
	word16 bx_237
	byte bl_238
	byte bh_239
	byte CZ_240
	call SEQ(cs, Mem0[ss:bp_156 + 0x0006:word16]) (retsize: 2; depth: 56)
		uses: al_180,ax_179,bh_175,bl_174,bLoc2B,bp_156,bx_173,C_211,cs_169,cx_177,CZ_176,D_162,di_208,ds_164,es_161,S_210,SCZO_212,si_159,SO_182,sp_217,ss_157,SZO_209,wLoc02_4,wLoc24,wLoc28_148,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_216,wLoc36_218,Z_213
		defs: al_227,ax_232,bh_239,bl_238,bp_220,bx_237,C_230,cs_233,cx_234,CZ_240,D_226,di_224,ds_228,es_225,S_236,SCZO_222,si_223,SO_235,sp_219,ss_221,SZO_229,Z_231
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_174A:
	byte bl_272 = (byte) ax_179
	word16 bx_275 = DPB(ax_179, bl_272, 0)
	branch bl_272 < 0x00 l0800_1767
// DataOut: ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_174F:
	branch Mem0[ds:bx_275 + 0x055A:byte] != 0x01 l0800_1767
// DataOut: ax bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1767:
	word16 sp_284
	byte SCZO_287
	word16 di_289
	selector es_290
	byte D_291
	byte al_292
	byte SZO_294
	byte C_295
	byte Z_296
	word16 ax_297
	word16 cx_299
	byte SO_300
	byte S_301
	byte bl_303
	byte bh_304
	byte CZ_305
	call SEQ(cs, Mem0[ss:bp_156 + 0x0006:word16]) (retsize: 2; depth: 56)
		uses: al_270,ax_269,bh_273,bl_274,bLoc2B,bp_266,bx_275,C_278,cs_255,cx_260,CZ_252,D_258,di_264,ds_257,es_262,S_277,SCZO_261,si_265,SO_254,sp_282,ss_259,SZO_276,wLoc02_4,wLoc24,wLoc28_250,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_281,wLoc36_283,Z_256
		defs: al_292,ax_297,bh_304,bl_303,bp_285,bx_302,C_295,cs_298,cx_299,CZ_305,D_291,di_289,ds_293,es_290,S_301,SCZO_287,si_288,SO_300,sp_284,ss_286,SZO_294,Z_296
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1756:
	word16 sp_321
	byte SCZO_324
	word16 si_325
	word16 di_326
	selector es_327
	byte D_328
	byte al_329
	byte SZO_331
	byte C_332
	byte Z_333
	word16 ax_334
	word16 cx_336
	byte SO_337
	byte S_338
	word16 bx_339
	byte bl_340
	byte bh_341
	byte CZ_342
	call SEQ(cs, Mem0[ss:bp_156 + 0x0004:word16]) (retsize: 2; depth: 54)
		uses: al_270,ax_269,bh_273,bl_274,bLoc2B,bp_266,bx_275,C_278,cs_255,cx_260,CZ_252,D_258,di_264,ds_257,es_262,S_277,SCZO_313,si_265,SO_254,sp_319,ss_259,SZO_317,wLoc02_4,wLoc24,wLoc28_316,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_320,wLoc36_37,Z_314
		defs: al_329,ax_334,bh_341,bl_340,bp_322,bx_339,C_332,cs_335,cx_336,CZ_342,D_328,di_326,ds_330,es_327,S_338,SCZO_324,si_325,SO_337,sp_321,ss_323,SZO_331,Z_333
	ax_179 = ax_334
	branch ax_334 > 0x0000 l0800_174A
// DataOut: al bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0028(8)

l0800_1764:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -42(fp):0x0000 -40(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_1AEB:
	word16 sp_112
	word16 bp_113
	selector ss_114
	byte SCZO_115
	word16 si_116
	word16 di_117
	selector es_118
	byte D_119
	byte al_120
	selector ds_121
	byte SZO_122
	byte C_123
	byte Z_124
	word16 ax_125
	selector cs_126
	word16 cx_127
	byte SO_128
	byte S_129
	word16 bx_130
	byte bl_131
	byte bh_132
	byte CZ_133
	call SEQ(cs, Mem0[ss:bp_156 + 0x0006:word16]) (retsize: 2; depth: 56)
		uses: al_59,ax_109,bh_39,bl_40,bLoc2B_102,bp_54,bx_41,C_63,cs_44,cx_48,CZ_38,D_46,di_52,ds_45,es_50,S_42,SCZO_99,si_58,SO_43,sp_110,ss_47,SZO_61,wLoc02_4,wLoc24_101,wLoc28_104,wLoc2A_14,wLoc2E_10,wLoc30_13,wLoc32_18,wLoc34_108,wLoc36_111,Z_100
		defs: al_120,ax_125,bh_132,bl_131,bp_113,bx_130,C_123,cs_126,cx_127,CZ_133,D_119,di_117,ds_121,es_118,S_129,SCZO_115,si_116,SO_128,sp_112,ss_114,SZO_122,Z_124
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:0x00 bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):0x0000 -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_1AFF:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_1B8C:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 0x0002 si:<invalid> al:<invalid> es:es ax:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>

fn0800_16F3_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si al:<invalid> es:es ax:<invalid> di:di cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):es -48(fp):di -46(fp):si -43(fp):0x00 -42(fp):<invalid> -40(fp):<invalid> -36(fp):0xFFFF -2(fp):bp 8(fp):<invalid>



